{"ast":null,"code":"var _jsxFileName = \"/Users/eric/Desktop/React Sandbox/src/components/users/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = ({\n  showClear,\n  clearUsers,\n  setAlert,\n  searchUsers\n}) => {\n  _s();\n\n  const [text, setText] = useState();\n\n  const onChange = e => setText(e.target.value);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (text === '') {\n      setAlert('Please Enter Something', 'light');\n    } else {\n      searchUsers(this.state.text);\n      this.setText('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"from\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: this.onChange,\n        type: \"text\",\n        name: \"text\",\n        placeholder: \"Search Users\",\n        value: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"search\",\n        className: \"btn btn-dark btn-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), showClear && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-light btn-block\",\n        onClick: clearUsers,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Search, \"za7BNhKDdJnyt4+Py2N1gS5gjJM=\");\n\n_c = Search;\nSearch.propTypes = {\n  searchUsers: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/eric/Desktop/React Sandbox/src/components/users/Search.js"],"names":["React","useState","PropTypes","Search","showClear","clearUsers","setAlert","searchUsers","text","setText","onChange","e","target","value","onSubmit","preventDefault","state","propTypes","func","isRequired","bool"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,UAAZ;AAAuBC,EAAAA,QAAvB;AAAgCC,EAAAA;AAAhC,CAAD,KAAiD;AAAA;;AAC5D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,EAAhC;;AAEA,QAAMS,QAAQ,GAAIC,CAAD,IAAOF,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAA/B;;AACA,QAAMC,QAAQ,GAAIH,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAIP,IAAI,KAAK,EAAb,EAAiB;AACbF,MAAAA,QAAQ,CAAC,wBAAD,EAA2B,OAA3B,CAAR;AACH,KAFD,MAEM;AACFC,MAAAA,WAAW,CAAC,KAAKS,KAAL,CAAWR,IAAZ,CAAX;AACA,WAAKC,OAAL,CAAa,EAAb;AACH;AACJ,GARD;;AAUI,sBACI;AAAA,2BACA;AAAM,MAAA,QAAQ,EAAE,KAAKK,QAArB;AAA+B,MAAA,SAAS,EAAC,MAAzC;AAAA,8BACI;AAAO,QAAA,QAAQ,EAAE,KAAKJ,QAAtB;AAAgC,QAAA,IAAI,EAAC,MAArC;AAA4C,QAAA,IAAI,EAAC,MAAjD;AAAwD,QAAA,WAAW,EAAC,cAApE;AAAmF,QAAA,KAAK,EAAEF;AAA1F;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAoC,QAAA,SAAS,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKJ,SAAS,iBACV;AAAQ,QAAA,SAAS,EAAC,yBAAlB;AAA4C,QAAA,OAAO,EAAEC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWP,CAzBD;;GAAMF,M;;KAAAA,M;AA2BNA,MAAM,CAACc,SAAP,GAAmB;AACfV,EAAAA,WAAW,EAAEL,SAAS,CAACgB,IAAV,CAAeC,UADb;AAEfd,EAAAA,UAAU,EAAEH,SAAS,CAACgB,IAAV,CAAeC,UAFZ;AAGff,EAAAA,SAAS,EAAEF,SAAS,CAACkB,IAAV,CAAeD,UAHX;AAIfb,EAAAA,QAAQ,EAAEJ,SAAS,CAACgB,IAAV,CAAeC;AAJV,CAAnB;AAOA,eAAehB,MAAf","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst Search = ({showClear, clearUsers,setAlert,searchUsers})=> {\n    const [text, setText] = useState();\n\n    const onChange = (e) => setText(e.target.value);\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (text === '') {\n            setAlert('Please Enter Something', 'light');\n        }else {\n            searchUsers(this.state.text);\n            this.setText('');\n        }\n    }\n\n        return (\n            <div>\n            <form onSubmit={this.onSubmit} className=\"from\">\n                <input onChange={this.onChange} type=\"text\" name=\"text\" placeholder=\"Search Users\" value={text}/>\n                <input type=\"submit\" value=\"search\" className=\"btn btn-dark btn-block\" />\n                {showClear && \n                <button className=\"btn btn-light btn-block\" onClick={clearUsers}>Clear</button>\n                }\n            </form>\n            </div>\n        )  \n}\n\nSearch.propTypes = {\n    searchUsers: PropTypes.func.isRequired,\n    clearUsers: PropTypes.func.isRequired,\n    showClear: PropTypes.bool.isRequired,\n    setAlert: PropTypes.func.isRequired,\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}