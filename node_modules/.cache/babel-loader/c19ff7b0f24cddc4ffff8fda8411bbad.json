{"ast":null,"code":"var _jsxFileName = \"/Users/eric/Desktop/React Sandbox/src/components/repos/Repos.js\";\nimport React from 'react';\nimport RepoItem from './RepoItem';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Repos = ({\n  repos,\n  loading\n}) => {\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: userStyle,\n      children: users && users.map(user => /*#__PURE__*/_jsxDEV(RepoItem, {\n        repo: repo\n      }, repo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this);\n  }\n};\n\n_c = Repos;\nRepos.propTypes = {\n  repos: PropTypes.array.isRequired\n};\nexport default Repos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repos\");","map":{"version":3,"sources":["/Users/eric/Desktop/React Sandbox/src/components/repos/Repos.js"],"names":["React","RepoItem","Spinner","PropTypes","Repos","repos","loading","userStyle","users","map","user","repo","id","propTypes","array","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAGC,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAsB;AAEjC,MAAIA,OAAJ,EAAa;AACT,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO;AACH,wBACA;AAAK,MAAA,KAAK,EAAEC,SAAZ;AAAA,gBACKC,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACpB,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEC;AAAhB,SAA2BA,IAAI,CAACC,EAAhC;AAAA;AAAA;AAAA;AAAA,cADM;AADd;AAAA;AAAA;AAAA;AAAA,YADA;AAOH;AAEJ,CAdA;;KAAMR,K;AAgBPA,KAAK,CAACS,SAAN,GAAkB;AACdR,EAAAA,KAAK,EAAEF,SAAS,CAACW,KAAV,CAAgBC;AADT,CAAlB;AAIA,eAAeX,KAAf","sourcesContent":["import React from 'react'\nimport RepoItem from './RepoItem'\nimport Spinner from '../layout/Spinner'\nimport PropTypes from 'prop-types'\n\n\n const Repos = ({repos, loading}) => {\n\n    if (loading) {\n        return <Spinner/>\n    } else {\n        return (\n        <div style={userStyle}>\n            {users && users.map(user => (\n                <RepoItem repo={repo} key={repo.id}/>\n            ))}\n        </div>\n        );\n    }\n\n}\n\nRepos.propTypes = {\n    repos: PropTypes.array.isRequired,\n}\n\nexport default Repos;\n"]},"metadata":{},"sourceType":"module"}