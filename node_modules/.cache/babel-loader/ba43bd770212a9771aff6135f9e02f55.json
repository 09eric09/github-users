{"ast":null,"code":"var _jsxFileName = \"/Users/eric/Desktop/React Sandbox/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Search from './components/users/Search';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [repos, setRepos] = useState([]);\n  const [user, setUser] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null); //Search Github Users\n\n  const searchUsers = text => {\n    setLoading(true);\n    fetch(`https://api.github.com/search/users?q=${text}&client_id=\n  ${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`).then(res => {\n      return res.json();\n    }).then(data => {\n      setUsers(data.items);\n      setLoading(false);\n    });\n  }; //Get single Github User\n\n\n  const getUser = username => {\n    setLoading(true);\n    fetch(`https://api.github.com/users/${username}?client_id=\n  ${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`).then(res => {\n      return res.json();\n    }).then(data => {\n      setUser(data);\n      setLoading(false);\n    });\n  }; //Get Users Repos\n\n\n  const getUserRepos = username => {\n    setLoading(true);\n    fetch(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc$client_id=\n  ${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`).then(res => {\n      return res.json();\n    }).then(data => {\n      setRepos(data);\n      setLoading(false);\n    });\n  }; //Clear users from state\n\n\n  const clearUsers = () => {\n    setUsers([]);\n    setLoading(false);\n  }; //Set Alert\n\n\n  const showAlert = (msg, type) => {\n    setAlert({\n      msg: msg,\n      type: type\n    });\n    setTimeout(() => setAlert(null), 5000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          alert: alert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            render: props => /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Search, {\n                searchUsers: searchUsers,\n                clearUsers: clearUsers,\n                showClear: users.length > 0 ? true : false,\n                setAlert: showAlert\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Users, {\n                loading: loading,\n                users: users\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            component: About\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/user/:login\",\n            render: props => /*#__PURE__*/_jsxDEV(User, { ...props,\n              getUser: getUser,\n              getUserRepos: getUserRepos,\n              repos: repos,\n              user: user,\n              loading: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"PRT5z8wpdxpDR6BNjFR9kFg3Gkg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/eric/Desktop/React Sandbox/src/App.js"],"names":["React","Fragment","useState","BrowserRouter","Router","Switch","Route","Navbar","Search","Users","User","Alert","About","App","users","setUsers","repos","setRepos","user","setUser","loading","setLoading","alert","setAlert","searchUsers","text","fetch","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","then","res","json","data","items","getUser","username","getUserRepos","clearUsers","showAlert","msg","type","setTimeout","props","length"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Search from './components/users/Search';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport './App.css';\n\nconst App = () => {\nconst [users, setUsers] = useState([]);\nconst [repos, setRepos] = useState([]);\nconst [user, setUser] = useState({});\nconst [loading, setLoading] = useState(false);\nconst [alert, setAlert] = useState(null);\n\n\n//Search Github Users\nconst searchUsers = (text) =>{\n  setLoading(true);\n  \n  fetch(`https://api.github.com/search/users?q=${text}&client_id=\n  ${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n  .then((res) => {\n    return res.json();\n  })\n  .then((data) => {\n    setUsers(data.items);\n    setLoading(false);\n  });\n}\n\n//Get single Github User\nconst getUser = (username) => {\n  setLoading(true);\n  \n  fetch(`https://api.github.com/users/${username}?client_id=\n  ${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n  .then((res) => {\n    return res.json();\n  })\n  .then((data) => {\n    setUser(data);\n    setLoading(false);\n  });\n}\n\n//Get Users Repos\nconst getUserRepos = (username) => {\n  setLoading(true);\n  \n  fetch(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc$client_id=\n  ${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n  .then((res) => {\n    return res.json();\n  })\n  .then((data) => {\n    setRepos(data);\n    setLoading(false);\n  });\n}\n\n//Clear users from state\nconst clearUsers = () => {\n  setUsers([]);\n  setLoading(false);\n}\n\n//Set Alert\nconst showAlert = (msg, type) => {\n  setAlert({msg: msg, type: type});\n\n  setTimeout(() => setAlert(null), 5000);\n}\n    return (\n      <Router>\n      <div className='App'>\n        <Navbar/>\n        <div className=\"container\">\n        <Alert alert={alert}/>\n        <Switch>\n          <Route exact path='/' render={props => (\n            <Fragment>\n              <Search searchUsers={searchUsers} clearUsers={clearUsers} \n              showClear={ users.length > 0 ? true: false } setAlert={showAlert}/>\n              <Users loading={loading} users={users} />\n            </Fragment>\n          )}/>\n\n          <Route exact path='/about' component={About}/>\n          <Route exact path='/user/:login' render={props => (\n          <User {...props} getUser={getUser} getUserRepos={getUserRepos} \n          repos={repos} user={user} loading={loading}/>\n          )}/>\n        </Switch>\n        </div>\n      </div>\n      </Router>\n       );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}