{"ast":null,"code":"import { SEARCH_USERS, GET_USER, CLEAR_USERS, GET_REPOS, SET_LOADING } from '../types'; //this recievs the data from the dispatch, updates the data and sends down to any component that needs it\n\nexport default ((state, action) => {\n  switch (action.type) {\n    case SEARCH_USERS:\n      return { ...state,\n        //users gets filled with the payload from our API request in GithubState dispatch\n        users: action.payload,\n        loading: false\n      };\n\n    case GET_USER:\n      return { ...state,\n        user: action.payload,\n        loading: false\n      };\n\n    case CLEAR_USERS:\n      return { ...state,\n        users: [],\n        loading: false\n      };\n\n    case SET_LOADING:\n      return { //the 3 dots takes whatever value is already in the state\n        ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/eric/Desktop/React Sandbox/src/context/github/githubReducer.js"],"names":["SEARCH_USERS","GET_USER","CLEAR_USERS","GET_REPOS","SET_LOADING","state","action","type","users","payload","loading","user"],"mappings":"AAAA,SACIA,YADJ,EAEIC,QAFJ,EAGIC,WAHJ,EAIIC,SAJJ,EAKIC,WALJ,QAMO,UANP,C,CAOA;;AACA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAkB;AAC7B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,YAAL;AACI,aAAM,EACF,GAAGK,KADD;AAEF;AACAG,QAAAA,KAAK,EAAEF,MAAM,CAACG,OAHZ;AAIFC,QAAAA,OAAO,EAAE;AAJP,OAAN;;AAMA,SAAKT,QAAL;AACI,aAAM,EACF,GAAGI,KADD;AAEFM,QAAAA,IAAI,EAAEL,MAAM,CAACG,OAFX;AAGFC,QAAAA,OAAO,EAAE;AAHP,OAAN;;AAKJ,SAAKR,WAAL;AACI,aAAM,EACF,GAAGG,KADD;AAEFG,QAAAA,KAAK,EAAE,EAFL;AAGFE,QAAAA,OAAO,EAAE;AAHP,OAAN;;AAKR,SAAKN,WAAL;AACI,aAAM,EACF;AACA,WAAGC,KAFD;AAGFK,QAAAA,OAAO,EAAE;AAHP,OAAN;;AAKJ;AACI,aAAOL,KAAP;AA3BR;AA6BH,CA9BD","sourcesContent":["import {\n    SEARCH_USERS,\n    GET_USER,\n    CLEAR_USERS,\n    GET_REPOS,\n    SET_LOADING,\n} from '../types';\n//this recievs the data from the dispatch, updates the data and sends down to any component that needs it\nexport default (state, action) =>{\n    switch(action.type) {\n        case SEARCH_USERS:\n            return{\n                ...state,\n                //users gets filled with the payload from our API request in GithubState dispatch\n                users: action.payload,\n                loading: false,\n            }\n            case GET_USER:\n                return{\n                    ...state,\n                    user: action.payload,\n                    loading: false,\n                }\n            case CLEAR_USERS:\n                return{\n                    ...state,\n                    users: [],\n                    loading: false,\n                }\n        case SET_LOADING:\n            return{\n                //the 3 dots takes whatever value is already in the state\n                ...state,\n                loading: true,\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}