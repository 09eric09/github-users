{"ast":null,"code":"var _jsxFileName = \"/Users/eric/Desktop/React Sandbox/src/components/users/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport githubContext from '../../context/github/githubContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = ({\n  showClear,\n  clearUsers,\n  setAlert\n}) => {\n  _s();\n\n  //we have to intialize the githubContext with useContext hook first!\n  const githubContext = useContext(githubContext);\n  const [text, setText] = useState('');\n\n  const onChange = e => setText(e.target.value);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (text === '') {\n      setAlert('Please Enter Something', 'light');\n    } else {\n      //Old way of doing it with useState and props\n      // searchUsers(text);\n      //New way with useContext\n      githubContext();\n      setText('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      className: \"from\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onChange,\n        type: \"text\",\n        name: \"text\",\n        placeholder: \"Search Users\",\n        value: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"search\",\n        className: \"btn btn-dark btn-block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), showClear && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-light btn-block\",\n        onClick: clearUsers,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }, this);\n}; // we don't need these proptypes anymore with context\n// Search.propTypes = {\n//     searchUsers: PropTypes.func.isRequired,\n//     clearUsers: PropTypes.func.isRequired,\n//     showClear: PropTypes.bool.isRequired,\n//     setAlert: PropTypes.func.isRequired,\n// }\n\n\n_s(Search, \"oq3jGJdjVGGpHuiNnq8eWSt+t48=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/eric/Desktop/React Sandbox/src/components/users/Search.js"],"names":["React","useState","PropTypes","githubContext","Search","showClear","clearUsers","setAlert","useContext","text","setText","onChange","e","target","value","onSubmit","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,UAAZ;AAAwBC,EAAAA;AAAxB,CAAD,KAAsC;AAAA;;AACjD;AACA,QAAMJ,aAAa,GAAGK,UAAU,CAACL,aAAD,CAAhC;AAEA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMU,QAAQ,GAAIC,CAAD,IAAOF,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAA/B;;AACA,QAAMC,QAAQ,GAAIH,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAIP,IAAI,KAAK,EAAb,EAAiB;AACbF,MAAAA,QAAQ,CAAC,wBAAD,EAA2B,OAA3B,CAAR;AACH,KAFD,MAEM;AACF;AACA;AAEA;AACAJ,MAAAA,aAAa;AACbO,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACJ,GAZD;;AAcI,sBACI;AAAA,2BACA;AAAM,MAAA,QAAQ,EAAEK,QAAhB;AAA0B,MAAA,SAAS,EAAC,MAApC;AAAA,8BACI;AAAO,QAAA,QAAQ,EAAEJ,QAAjB;AAA2B,QAAA,IAAI,EAAC,MAAhC;AAAuC,QAAA,IAAI,EAAC,MAA5C;AAAmD,QAAA,WAAW,EAAC,cAA/D;AAA8E,QAAA,KAAK,EAAEF;AAArF;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAoC,QAAA,SAAS,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKJ,SAAS,iBACV;AAAQ,QAAA,SAAS,EAAC,yBAAlB;AAA4C,QAAA,OAAO,EAAEC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWP,CA/BD,C,CAiCA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAvCMF,M;;KAAAA,M;AAyCN,eAAeA,MAAf","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types';\nimport githubContext from '../../context/github/githubContext';\n\n\nconst Search = ({showClear, clearUsers, setAlert})=> {\n    //we have to intialize the githubContext with useContext hook first!\n    const githubContext = useContext(githubContext);\n    \n    const [text, setText] = useState('');\n    const onChange = (e) => setText(e.target.value);\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (text === '') {\n            setAlert('Please Enter Something', 'light');\n        }else {\n            //Old way of doing it with useState and props\n            // searchUsers(text);\n\n            //New way with useContext\n            githubContext();\n            setText('');\n        }\n    }\n\n        return (\n            <div>\n            <form onSubmit={onSubmit} className=\"from\">\n                <input onChange={onChange} type=\"text\" name=\"text\" placeholder=\"Search Users\" value={text}/>\n                <input type=\"submit\" value=\"search\" className=\"btn btn-dark btn-block\" />\n                {showClear && \n                <button className=\"btn btn-light btn-block\" onClick={clearUsers}>Clear</button>\n                }\n            </form>\n            </div>\n        )  \n}\n\n// we don't need these proptypes anymore with context\n// Search.propTypes = {\n//     searchUsers: PropTypes.func.isRequired,\n//     clearUsers: PropTypes.func.isRequired,\n//     showClear: PropTypes.bool.isRequired,\n//     setAlert: PropTypes.func.isRequired,\n// }\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}